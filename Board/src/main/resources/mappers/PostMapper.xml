<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.domain.post.PostMapper">

    <!-- tb_post 테이블 전체 컬럼 -->
   <sql id="postColumns">
       id,
       title,
       content,
       writer,
       view_cnt,
       notice_yn,
       delete_yn,
       created_date,
       modified_date
   </sql>





    <!-- 게시글 저장 -->
   <insert id="save" parameterType="com.study.domain.post.PostRequest" useGeneratedKeys="true" keyProperty="id">
       insert into tb_post (
       <include refid="postColumns" />
       ) values (
       #{id},
       #{title},
       #{content},
       #{writer},
       0,
       #{noticeYn},
       0,
       now(),
       null
       )
   </insert>


    <!-- 게시글 상세정보 조회 -->
    <select id="findById" parameterType="long" resultType="com.study.domain.post.PostResponse">
       select
        <include refid="postColumns" />
        from tb_post
        where id = #{value}
    </select>


    <!-- 게시글 수정 -->
    <update id="update" parameterType="com.study.domain.post.PostRequest">
        update tb_post
        set
        title = #{title},
        content = #{content},
        writer = #{writer},
        modified_date = now()
        where id = #{id}
    </update>


    <!-- 게시글 삭제 -->
    <delete id="deleteById" parameterType="long">
        update tb_post
        set delete_yn = 1
        where id = #{value}
    </delete>

    <!-- 게시글 검색 -->
    <sql id="search">
        <!-- 검색 키워드 있을 때 -->
        <if test="keyword !=null and keyword !='' ">
            <choose>
                <!-- 검색 유형 있을 때 -->
                <when test="searchType != null and searchType != ''">
                    <choose>
                        <when test="'title'.equals( searchType )">
                            and title like concat('%', #{keyword}, '%')
                        </when>
                        <when test="'content'.equals( searchType )">
                            and content like concat('%', #{keyword}, '%')
                        </when>
                        <when test="'writer'.equals( searchType )">
                            and writer like concat('%', #{keyword}, '%')
                        </when>
                    </choose>
                </when>

                <!-- 검색유형 : 전체 검색일 때 -->
                <otherwise>
                    and (
                        title like concat('%', #{keyword},'%')
                        or
                        content like concat('%', #{keyword},'%')
                        or
                        writer like concat('%', #{keyword},'%')
                    )
                </otherwise>
            </choose>
        </if>
    </sql>

    <!-- 게시글 리스트 조회 -->
    <select id="findAll" parameterType="com.study.common.dto.SearchDto" resultType="com.study.domain.post.PostResponse">
        select
            <include refid="postColumns" />
        from
            tb_post
        where
            delete_yn = 0
            <include refid="search" />
        order by
            id desc
        limit
            #{pagination.limitStart}, #{recordSize};
    </select>

    <!-- 게시글 수 카운팅 -->
    <select id="count" parameterType="com.study.common.dto.SearchDto" resultType="int">
        select
            count(*)
        from
            tb_post
        where
            delete_yn = 0
            <include refid="search" />
    </select>

</mapper>
